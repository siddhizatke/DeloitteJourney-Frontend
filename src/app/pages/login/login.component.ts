import { Component, signal } from '@angular/core';
import { Router } from '@angular/router';
import { HttpClient } from '@angular/common/http';
import { environment } from '../../../environments/environment';
import { MatCardModule } from '@angular/material/card';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatError, MatFormField, MatFormFieldModule, MatLabel } from '@angular/material/form-field';
import { MatIcon, MatIconModule } from '@angular/material/icon';
import { MatSpinner } from '@angular/material/progress-spinner';
import { MatInputModule } from '@angular/material/input';
import { MatButtonModule } from '@angular/material/button';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css'],
  standalone: true,
  imports: [MatInputModule,
    MatFormFieldModule,
    MatButtonModule,
    MatIconModule,
    MatCardModule,
    FormsModule,
    MatButtonModule,
    CommonModule,],
})
export class LoginComponent {
  showLogin = true;
  username: string = '';
  password: string = '';
  errorMessage: string = '';
  showSpinner: boolean = false;
  //hide: boolean = true; // For password visibility toggle
  // For password visibility toggle
  hide = signal(true);

  constructor(private router: Router, private http: HttpClient) {}

  
  // Switch to Register form
  switchToRegister() {
    this.showLogin = false;
    this.errorMessage = '';
    this.username = '';
    this.password = '';
  }

  // Switch to Login form
  switchToLogin() {
    this.showLogin = true;
    this.errorMessage = '';
    this.username = '';
    this.password = '';
  }
 
  clickEvent(event: MouseEvent) {
    this.hide.set(!this.hide());
    event.stopPropagation();
  }

// Code Generated by Sidekick is for learning and experimentation purposes only.
onLogin(): void {
  this.errorMessage = '';
  this.showSpinner = true;
  this.http.get<any>(
    environment.apiBaseUrl + '/Account/login',
    { params: { username: this.username, password: this.password } }
  ).subscribe({
    next: (res) => {
      this.showSpinner = false;
      console.log('Login response:', res);
      // Store user info including userRole
      sessionStorage.setItem('user', JSON.stringify(res));
      this.router.navigate(['aboutme']);
    },
    error: (err) => {
      this.showSpinner = false;
      this.errorMessage = err.error?.message || 'Invalid username or password';
    }
  });
}



  onRegister(): void {
    this.errorMessage = '';
    this.showSpinner = true;
    this.http.post<any>(environment.apiBaseUrl + '/Account/register', {
      username: this.username,
      password: this.password
    }).subscribe({
      next: (res) => {
        this.showSpinner = false;
        alert('Registration successful! Please log in.');
        this.switchToLogin();
      },
      error: (err) => {
        this.showSpinner = false;
        this.errorMessage = err.error?.message || 'Registration failed';
      }
    });
  }
   
}
